name: Rust

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:


env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Install musl-tools
      run: sudo apt-get install -y musl-tools

    - name: Add musl target
      run: rustup target add x86_64-unknown-linux-musl

    # - name: Build
    #   run: cargo build --release --target x86_64-unknown-linux-musl

    # - name: Run tests
    #   run: cargo test --release --target x86_64-unknown-linux-musl

    # - name: Upload artifact
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: calibre-api
    #     path: |
    #       target/x86_64-unknown-linux-musl/release/calibre-api*
    #       !target/x86_64-unknown-linux-musl/release/calibre-api.d
    #     if-no-files-found: error

    - name: Run ci-transfer
      env:
        DESTINATION: ${{ secrets.DESTINATION }}
      run: |
        mkdir -p target/x86_64-unknown-linux-musl/release
        echo "hello world" > target/x86_64-unknown-linux-musl/release/calibre-api
        chmod +x target/x86_64-unknown-linux-musl/release/calibre-api
        wget https://github.com/corkine/ci-transfer/releases/latest/download/ci-transfer
        chmod +x ci-transfer
        DECODED_DESTINATION=$(printf '%b' "${DESTINATION//%/\\x}")
        ./ci-transfer -s target/x86_64-unknown-linux-musl/release/calibre-api -d "$DECODED_DESTINATION" -c "
          pid=\$(pgrep -f calibre-api)
          if [ ! -z \"\$pid\" ]; then
            kill \$pid
            echo 'Killed existing calibre-api process'
          else
            echo 'No existing calibre-api process found'
          fi
          chmod +x /root/calibre-web/calibre-api
          nohup /root/calibre-web/calibre-api > /root/calibre-api.log 2>&1 &
          echo 'Started new calibre-api process'
        "